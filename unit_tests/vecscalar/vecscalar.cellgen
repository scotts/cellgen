#include <stdio.h>
#include <malloc_align.h>
#include <free_align.h>

#define ITERATIONS 1000
#define N 16777216 // 128 MB 

double vecscalar(double* vec, unsigned long long* time)
{
	double sum = 0;
	unsigned long long before = get_tb();

	#pragma cell reduction(+: double s = sum) shared(double* v = vec)
	{
		int i;
		for (i = 0; i < N; ++i) {
			s += v[i];
		}
	}

	unsigned long long after = get_tb();
	*time += after - before;

	return sum;
}

int main ()
{
	int i;
	double* vec = _malloc_align(N * sizeof(double), 7);
	
	for (i = 0; i < N; ++i) {
		vec[i] = i;
	}

	double sum = 0;
	unsigned long long time = 0;
	for (i = 0; i < ITERATIONS; ++i) {
		sum = vecscalar(vec, &time);
	}

	printf("%f\n", (double)time / TB);

	return 0;
}
